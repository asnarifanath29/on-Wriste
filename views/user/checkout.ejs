<!doctype html>
<html class="no-js" lang="zxx">

<head>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>Watch shop | eCommers</title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="site.webmanifest">
    <link rel="shortcut icon" type="image/x-icon" href="assets/img/favicon.ico">
    <!-- SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <!-- CSS here -->
    <link rel="stylesheet" href="assets/css/bootstrap.min.css">
    <link rel="stylesheet" href="assets/css/owl.carousel.min.css">
    <link rel="stylesheet" href="assets/css/flaticon.css">
    <link rel="stylesheet" href="assets/css/slicknav.css">
    <link rel="stylesheet" href="assets/css/animate.min.css">
    <link rel="stylesheet" href="assets/css/magnific-popup.css">
    <link rel="stylesheet" href="assets/css/fontawesome-all.min.css">
    <link rel="stylesheet" href="assets/css/themify-icons.css">
    <link rel="stylesheet" href="assets/css/slick.css">
    <link rel="stylesheet" href="assets/css/nice-select.css">
    <link rel="stylesheet" href="assets/css/style.css">

    <!-- <link rel="stylesheet" href="assets/css/bootstrap.min.css"> -->
    <link rel="stylesheet" href="assets/css/fontawesome-all.min.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <style>
        .address-card {
            border: 2px solid #eee;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
            transition: all 0.3s ease;
            position: relative;
        }

        .address-card.selected {
            border-color: #ff2020;
            background-color: #fff9f9;
        }

        .address-card:hover {
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
        }

        .edit-btn {
            position: absolute;
            top: 15px;
            right: 15px;
        }

        .payment-method {
            border: 2px solid #eee;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .payment-method.selected {
            border-color: #ff2020;
            background-color: #fff9f9;
        }

        .order-summary {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
        }

        .form-section {
            padding: 2rem 0;
            background-color: #f8f9fa;
        }

        .address-form {
            background: white;
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        }

        .required-field::after {
            content: "*";
            color: red;
            margin-left: 4px;
        }

        .text-danger {
            font-size: 0.875rem;
        }

        .btn-primary {
            background-color: #ff2020;
            border-color: #ff2020;
        }

        .btn-primary:hover {
            background-color: #e60000;
            border-color: #e60000;
        }
    </style>
</head>

<body>
    <!--? Preloader Start -->
    <div id="preloader-active">
        <div class="preloader d-flex align-items-center justify-content-center">
            <div class="preloader-inner position-relative">
                <div class="preloader-circle"></div>
                <div class="preloader-img pere-text">
                    <img src="assets/img/logo/logo.png" alt="">
                </div>
            </div>
        </div>
    </div>
    <!-- Preloader Start -->
    <header>
        <!-- Header Start -->
        <div class="header-area">
            <div class="main-header header-sticky">
                <div class="container-fluid">
                    <div class="menu-wrapper">
                        <!-- Logo -->
                        <div class="logo">
                            <a href="index.html"><img src="assets/img/logo/logo.png" alt=""></a>
                        </div>
                        <!-- Main-menu -->
                        <div class="main-menu d-none d-lg-block">
                            <nav>
                                <ul id="navigation">
                                    <li><a href="/home">Home</a></li>
                                    <li><a href="/shop">shop</a></li>
                                    <li><a href="about.html">about</a></li>
                                    <li class="hot"><a href="#">Latest</a>
                                        <ul class="submenu">
                                            <li><a href="shop.html"> Product list</a></li>
                                            <li><a href="product_details.html"> Product Details</a></li>
                                        </ul>
                                    </li>
                                    <li><a href="blog.html">Blog</a>
                                        <ul class="submenu">
                                            <li><a href="blog.html">Blog</a></li>
                                            <li><a href="blog-details.html">Blog Details</a></li>
                                        </ul>
                                    </li>
                                    <li><a href="#">Pages</a>
                                        <ul class="submenu">
                                            <li><a href="login.html">Login</a></li>
                                            <li><a href="cart.html">Cart</a></li>
                                            <li><a href="elements.html">Element</a></li>
                                            <li><a href="confirmation.html">Confirmation</a></li>
                                            <li><a href="checkout.html">Product Checkout</a></li>
                                        </ul>
                                    </li>
                                    <li><a href="contact.html">Contact</a></li>
                                </ul>
                            </nav>
                        </div>
                        <!-- Header Right -->
                        <div class="header-right">
                            <ul>
                                <li>
                                    <div class="nav-search search-switch">
                                        <span class="flaticon-search"></span>
                                    </div>
                                </li>
                                <li> <a href="/update-profile"><span class="flaticon-user"></span></a></li>
                                <li><a href="/cart"><span class="flaticon-shopping-cart"></span></a> </li>
                            </ul>
                        </div>
                    </div>
                    <!-- Mobile Menu -->
                    <div class="col-12">
                        <div class="mobile_menu d-block d-lg-none"></div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Header End -->
    </header>
    <main>
        <!-- Hero Area Start-->
        <div class="slider-area ">
            <div class="single-slider slider-height2 d-flex align-items-center">
                <div class="container">
                    <div class="row">
                        <div class="col-xl-12">
                            <div class="hero-cap text-center">
                                <h2>Checkout Page</h2>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Hero Area end-->

        <section class="checkout-section section-padding">
            <div class="container">
                <div class="row">
                    <!-- Left Column - Addresses and Payment -->
                    <div class="col-lg-12">
                        <!-- Delivery Addresses -->
                        <div class="card mb-4">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">Select Delivery Address</h5>
                                <a class="btn btn-danger" href="/add-address">
                                    <i class="fas fa-plus"></i> Add New Address
                                </a>
                            </div>




                            <div class="card-body">
                                <% if (addresses && addresses.length> 0) { %>
                                    <% addresses.forEach((address, index)=> { %>
                                        <div class="address-card <%= index === 0 ? 'selected' : '' %>">
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="address"
                                                    id="address<%= index %>" value="<%= address._id %>" <%=index===0
                                                    ? 'checked' : '' %>>
                                                <label class="form-check-label" for="address<%= index %>">
                                                    
                                                            <p class="mb-1 name">
                                                                <%= address.name %>
                                                            </p>
                                                            <p class="mb-1 locality">
                                                                <%= address.locality %>
                                                            </p>
                                                            <p class="mb-1 address">
                                                                <%= address.address %>
                                                            </p>
                                                            <p class="mb-1 location">
                                                                <%= address.place %>, <%= address.state %>
                                                                        <%= address.pincode %>
                                                            </p>
                                                            <p class="mb-1 phone">Phone: <%= address.phone %>
                                                            </p>
                                                            <% if (address.alternatePhone) { %>
                                                                <p class="mb-1 alternate-phone">Alternate Phone: <%=
                                                                        address.alternatePhone %>
                                                                </p>
                                                                <% } %>
                                                                    <% if (address.landmark) { %>
                                                                        <p class="mb-1 landmark">Landmark: <%=
                                                                                address.landmark %>
                                                                        </p>
                                                                        <% } %>
                                                                            <p class="mb-1 address-type"><b>
                                                                                    <%= address.addressType %>
                                                                                </b></p>
                                                                                <% if (address.isPrimary===true) { %>
                                                                                    <h3><b>Primary Address:</b></h3>
                                                                                    <% } %>
                                                </label>
                                            </div>
                                            <a href="/edit-address/<%= address._id %>"
                                                class="btn btn-outline-danger btn-sm edit-btn">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                        </div>
                                        <% }) %>
                                            <% } else { %>
                                                <p>No addresses available. Please <a href="/add-address">add an
                                                        address</a>.</p>
                                                <% } %>
                            </div>



                        </div>

                        <!-- Payment Methods -->
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">Payment Method</h5>
                            </div>
                            <div class="card-body">
                                <div class="payment-method selected">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="payment" id="cod" checked>
                                        <label class="form-check-label" for="cod">
                                            <h6 class="mb-1">Cash on Delivery</h6>
                                            <p class="mb-0 text-muted">Pay when your order arrives</p>
                                        </label>
                                    </div>
                                </div>

                                <div class="payment-method">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="payment" id="razorpay">
                                        <label class="form-check-label" for="razorpay">
                                            <h6 class="mb-1">Razorpay</h6>
                                            <p class="mb-0 text-muted">Pay securely with Razorpay</p>
                                        </label>
                                    </div>
                                </div>
                                <div class="payment-method">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="payment" id="wallet">
                                        <label class="form-check-label" for="wallet">
                                            <h6 class="mb-1">wallet</h6>
                                            <p class="mb-0 text-muted">Pay securely with wallet</p>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="container mt-5">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="card">
                                    <div class="card-header">
                                        <h5 class="mb-0">Apply Coupon</h5>
                                    </div>
                                    <div class="card-body">
                                        <div class="coupon-container">
                                            <div class="input-group">
                                                <select class="form-select" id="couponSelect">
                                                    <option value="">Select a Coupon</option>
                                                    <% coupons.forEach((coupon)=>{ %>
                                                        <option value="<%= coupon.couponCode %>"
                                                            data-percentage="<%= coupon.discountPercentage %>">
                                                            <%= `${coupon.couponCode} - ${coupon.discountPercentage}%
                                                                off` %>
                                                        </option>
                                                        <% }) %>
                                                </select>
                                                <button class="btn btn-danger" id="applyCouponBtn">Apply Coupon</button>
                                            </div>
                                            <div id="couponMessage" class="text-muted mt-2"></div>
                                        </div>
                                    </div>
                                </div>

                                <div class="card mt-3">
                                    <div class="card-header">
                                        <h5 class="mb-0">Order Summary</h5>
                                    </div>
                                    <div class="card-body">
                                        <div class="order-summary">
                                            <div class="d-flex justify-content-between mb-2">
                                                <span>Subtotal</span>
                                                <span id="subtotalAmount">₹<%= subtotal.toFixed(2) %></span>
                                            </div>
                                            <div class="d-flex justify-content-between mb-2">
                                                <span>Shipping</span>
                                                <span>₹10.00</span>
                                            </div>
                                            <div class="d-flex justify-content-between mb-2" id="couponDiscountRow"
                                                style="display:none;">
                                                <span>Coupon Discount</span>
                                                <span id="couponDiscountAmount">-₹0.00</span>
                                            </div>
                                            <hr>
                                            <div class="d-flex justify-content-between mb-4">
                                                <strong>Total Amount</strong>
                                                <strong class="text-danger" id="totalAmount">₹<%= (subtotal +
                                                        10.00).toFixed(2) %></strong>
                                            </div>
                                            <a href="javascript:void(0);" class="btn btn-danger w-100"
                                                onclick=" placeOrder()">Place Order</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>



                </div>
            </div>
        </section>

    </main>
    <footer>
        <!-- Footer Start-->
        <div class="footer-area footer-padding">
            <div class="container">
                <div class="row d-flex justify-content-between">
                    <div class="col-xl-3 col-lg-3 col-md-5 col-sm-6">
                        <div class="single-footer-caption mb-50">
                            <div class="single-footer-caption mb-30">
                                <!-- logo -->
                                <div class="footer-logo">
                                    <a href="index.html"><img src="assets/img/logo/logo2_footer.png" alt=""></a>
                                </div>
                                <div class="footer-tittle">
                                    <div class="footer-pera">
                                        <p>Asorem ipsum adipolor sdit amet, consectetur adipisicing elitcf sed do
                                            eiusmod tem.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-2 col-lg-3 col-md-3 col-sm-5">
                        <div class="single-footer-caption mb-50">
                            <div class="footer-tittle">
                                <h4>Quick Links</h4>
                                <ul>
                                    <li><a href="#">About</a></li>
                                    <li><a href="#"> Offers & Discounts</a></li>
                                    <li><a href="#"> Get Coupon</a></li>
                                    <li><a href="#"> Contact Us</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-3 col-lg-3 col-md-4 col-sm-7">
                        <div class="single-footer-caption mb-50">
                            <div class="footer-tittle">
                                <h4>New Products</h4>
                                <ul>
                                    <li><a href="#">Woman Cloth</a></li>
                                    <li><a href="#">Fashion Accessories</a></li>
                                    <li><a href="#"> Man Accessories</a></li>
                                    <li><a href="#"> Rubber made Toys</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-3 col-lg-3 col-md-5 col-sm-7">
                        <div class="single-footer-caption mb-50">
                            <div class="footer-tittle">
                                <h4>Support</h4>
                                <ul>
                                    <li><a href="#">Frequently Asked Questions</a></li>
                                    <li><a href="#">Terms & Conditions</a></li>
                                    <li><a href="#">Privacy Policy</a></li>
                                    <li><a href="#">Report a Payment Issue</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Footer bottom -->
                <div class="row align-items-center">
                    <div class="col-xl-7 col-lg-8 col-md-7">
                        <div class="footer-copy-right">
                            <p>Copyright ©2020 All rights reserved | This template is made with <i class="fa fa-heart"
                                    aria-hidden="true"></i> by <a href="https://colorlib.com/">Colorlib</a></p>
                        </div>
                    </div>
                    <div class="col-xl-5 col-lg-4 col-md-5">
                        <div class="footer-copy-right f-right">
                            <!-- social -->
                            <div class="footer-social">
                                <a href="#"><i class="fab fa-twitter"></i></a>
                                <a href="https://www.facebook.com/sai4ull"><i class="fab fa-facebook-f"></i></a>
                                <a href="#"><i class="fab fa-behance"></i></a>
                                <a href="#"><i class="fas fa-globe"></i></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Footer End-->


    </footer>
    <!--? Search model Begin -->
    <div class="search-model-box">
        <div class="h-100 d-flex align-items-center justify-content-center">
            <div class="search-close-btn">+</div>
            <form class="search-model-form">
                <input type="text" id="search-input" placeholder="Searching key.....">
            </form>
        </div>
    </div>
    <!-- Search model end -->

    <!-- JS here -->

    <script src="./assets/js/vendor/modernizr-3.5.0.min.js"></script>
    <!-- Jquery, Popper, Bootstrap -->
    <script src="./assets/js/vendor/jquery-1.12.4.min.js"></script>
    <script src="./assets/js/popper.min.js"></script>
    <!-- <script src="./assets/js/bootstrap.min.js"></script> -->
    <!-- Jquery Mobile Menu -->
    <script src="./assets/js/jquery.slicknav.min.js"></script>

    <!-- Jquery Slick , Owl-Carousel Plugins -->
    <script src="./assets/js/owl.carousel.min.js"></script>
    <script src="./assets/js/slick.min.js"></script>

    <!-- One Page, Animated-HeadLin -->
    <script src="./assets/js/wow.min.js"></script>
    <script src="./assets/js/animated.headline.js"></script>
    <script src="./assets/js/jquery.magnific-popup.js"></script>

    <!-- Scrollup, nice-select, sticky -->
    <script src="./assets/js/jquery.scrollUp.min.js"></script>
    <script src="./assets/js/jquery.nice-select.min.js"></script>
    <script src="./assets/js/jquery.sticky.js"></script>

    <!-- contact js -->
    <script src="./assets/js/contact.js"></script>
    <script src="./assets/js/jquery.form.js"></script>
    <script src="./assets/js/jquery.validate.min.js"></script>
    <script src="./assets/js/mail-script.js"></script>
    <script src="./assets/js/jquery.ajaxchimp.min.js"></script>

    <!-- Jquery Plugins, main Jquery -->
    <script src="./assets/js/plugins.js"></script>
    <script src="./assets/js/main.js"></script>






    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>





    <!-- Include your existing scripts -->
    <script src="assets/js/vendor/jquery-1.12.4.min.js"></script>
    <script src="assets/js/bootstrap.min.js"></script>
    <script>
        // Add click handlers for address selection
        document.querySelectorAll('.address-card').forEach(card => {
            card.addEventListener('click', function () {
                // Remove selected class from all cards
                document.querySelectorAll('.address-card').forEach(c => {
                    c.classList.remove('selected');
                });
                // Add selected class to clicked card
                this.classList.add('selected');
                // Check the radio button
                this.querySelector('input[type="radio"]').checked = true;
            });
        });

        // Add click handlers for payment method selection
        document.querySelectorAll('.payment-method').forEach(method => {
            method.addEventListener('click', function () {
                // Remove selected class from all methods
                document.querySelectorAll('.payment-method').forEach(m => {
                    m.classList.remove('selected');
                });
                // Add selected class to clicked method
                this.classList.add('selected');
                // Check the radio button
                this.querySelector('input[type="radio"]').checked = true;
            });
        });



    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>

        // 1. First modify your placeOrder function in your checkout page JavaScript:

        async function placeOrder() {
            try {
                // Get selected address
                const selectedAddressInput = document.querySelector('input[name="address"]:checked');
                if (!selectedAddressInput) {
                    Swal.fire({
                        icon: "error",
                        title: "Address Missing",
                        text: "Please select a delivery address before placing the order.",
                    });
                    return;
                }

                // Get selected payment method
                const selectedPaymentInput = document.querySelector('input[name="payment"]:checked');
                if (!selectedPaymentInput) {
                    Swal.fire({
                        icon: "error",
                        title: "Payment Method Missing",
                        text: "Please select a payment method before placing the order.",
                    });
                    return;
                }



                const addressId = selectedAddressInput.value;


                // Get the total amount and any coupon discount
                const subtotal = parseFloat(document.getElementById('subtotalAmount').textContent.replace('₹', ''));
                const totalAmountElement = document.getElementById('totalAmount');
                const totalAmountWithShipping = parseFloat(totalAmountElement.textContent.replace('₹', ''));
                const couponSelect = document.getElementById('couponSelect');
                const couponCode = couponSelect.value;
                const couponDiscount = couponCode ? (subtotal + 10 - totalAmountWithShipping) : 0;
                const finalAmount = totalAmountWithShipping



                // Helper function to safely extract text content
                const getTextContent = (element, selector) => {
                    const el = element.querySelector(selector);
                    return el ? el.textContent.trim() : '';
                };

                // Get selected address card
                const selectedAddressCard = selectedAddressInput.closest('.address-card');

                // Extract address details
                const addressDetails = {
                    addressId: selectedAddressInput.value, 
                    name: getTextContent(selectedAddressCard, 'label p:nth-child(1)'),
                    locality: getTextContent(selectedAddressCard, 'label p:nth-child(2)'),
                    address: getTextContent(selectedAddressCard, 'label p:nth-child(3)'),
                };
                console.log(addressDetails);

                // Extract place, state, and pincode from the combined text
                const locationText = getTextContent(selectedAddressCard, 'label p:nth-child(4)');
                if (locationText) {
                    const locationParts = locationText.split(',').map(part => part.trim());
                    addressDetails.place = locationParts[0] || '';
                    addressDetails.state = locationParts[1] || '';
                    // Extract pincode - look for 6-digit number
                    const pincodeMatch = locationText.match(/\b\d{6}\b/);
                    addressDetails.pincode = pincodeMatch ? pincodeMatch[0] : '';
                }

                // Extract phone number - remove "Phone:" prefix and any spaces
                const phoneText = getTextContent(selectedAddressCard, 'label p:nth-child(5)');
                addressDetails.phone = phoneText.replace('Phone:', '').trim();

                // Extract alternate phone if exists
                const alternatePhoneText = getTextContent(selectedAddressCard, 'label p:nth-child(6)');
                if (alternatePhoneText.includes('Alternate Phone:')) {
                    addressDetails.alternatePhone = alternatePhoneText.replace('Alternate Phone:', '').trim();
                }

                // Extract landmark if exists
                const landmarkText = getTextContent(selectedAddressCard, 'label p:nth-child(7)');
                if (landmarkText.includes('Landmark:')) {
                    addressDetails.landmark = landmarkText.replace('Landmark:', '').trim();
                }

                // Extract address type
                addressDetails.addressType = getTextContent(selectedAddressCard, 'label b');

                // Validate essential address fields
                // const requiredFields = ['name', 'address', 'phone', 'pincode', 'place', 'state'];
                // const missingFields = requiredFields.filter(field => !addressDetails[field]);

                // if (missingFields.length > 0) {
                //     Swal.fire({
                //         icon: "error",
                //         title: "Invalid Address",
                //         text: `Missing required fields: ${missingFields.join(', ')}`,
                //         footer: 'Please ensure all required address fields are filled correctly'
                //     });
                //     return;
                // }


                const orderDetails = {
                    userId: '<%= userData.id %>',
                    addressDetails: {
                        addressId: addressId,
                        name: addressDetails.name,
                        locality: addressDetails.locality,
                        address: addressDetails.address,
                        place: addressDetails.place,
                        state: addressDetails.state,
                        pincode: addressDetails.pincode,
                        phone: addressDetails.phone,
                        alternatePhone: addressDetails.alternatePhone || null,
                        landmark: addressDetails.landmark || null,
                        addressType: addressDetails.addressType
                    },
                    paymentMethod: selectedPaymentInput.id,
                    orderAmount: {
                        subtotal: subtotal,
                        shippingCost: 10.00,
                        couponDiscount: couponDiscount,
                        payableAmount: finalAmount
                    },
                    appliedCoupon: couponCode || null
                };

                if (selectedPaymentInput.id === 'cod' && finalAmount > 1000) {
                    Swal.fire({
                        icon: 'info',
                        title: 'Cash On Delivery Not Available',
                        text: 'Orders above Rs. 1000 are not eligible for Cash on Delivery (COD). Please select another payment method.'
                    });
                    return;
                }

                if (selectedPaymentInput.id === 'cod') {
                    try {
                        Swal.fire({
                            title: 'Processing',
                            text: 'Placing your order...',
                            allowOutsideClick: false,
                            showConfirmButton: false,
                            willOpen: () => {
                                Swal.showLoading();
                            }
                        });

                        const response = await fetch('/place-order', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(orderDetails)
                        });

                        const data = await response.json();
                        Swal.close();

                        if (response.ok) {
                            console.log("heloooo success")
                            await Swal.fire({
                                icon: 'success',
                                title: 'Order Placed Successfully!',
                                text: data.message,
                                showConfirmButton: true
                            });
                            window.location.href = `/order-confirmation/${data.orderId}`;
                        }
                    } catch (error) {

                        await Swal.fire({
                            icon: 'error',
                            title: 'Order Failed',
                            text: data.message || 'Failed to place your order. Please try again.'
                        });
                    }
                }

                // For Razorpay
                else if (selectedPaymentInput.id === 'razorpay') {
                    try {
                        Swal.fire({
                            title: 'Processing',
                            text: 'Initializing payment...',
                            allowOutsideClick: false,
                            showConfirmButton: false,
                            willOpen: () => {
                                Swal.showLoading();
                            }
                        });

                        const paymentResponse = await fetch('/razorpay/initiate', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ amount: orderDetails.orderAmount.payableAmount })
                        });




                        if (!paymentResponse.ok) {
                            throw new Error('Failed to initialize payment');
                        }

                        const { razorpayKey, razorpayOrderId } = await paymentResponse.json();
                        Swal.close();

                        const razorpayOptions = {
                            key: razorpayKey,
                            amount: finalAmount * 100, // Amount in paise
                            currency: "INR",
                            order_id: razorpayOrderId,
                            name: "Watch Shop",
                            description: "Watch Purchase Payment",
                            handler: async function (response) {
                                try {
                                    Swal.fire({
                                        title: 'Processing',
                                        text: 'Completing your order...',
                                        allowOutsideClick: false,
                                        showConfirmButton: false,
                                        willOpen: () => {
                                            Swal.showLoading();
                                        }
                                    });

                                    const verifyResponse = await fetch('/place-order', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json'
                                        },
                                        body: JSON.stringify({
                                            ...orderDetails,
                                            razorpayPaymentId: response.razorpay_payment_id,
                                            razorpayOrderId: response.razorpay_order_id,
                                            razorpaySignature: response.razorpay_signature
                                        })
                                    });

                                    const result = await verifyResponse.json();

                                    if (result.success) {
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Payment Successful!',
                                            text: 'Your order has been placed successfully.',
                                            showConfirmButton: true
                                        }).then(() => {
                                            window.location.href = `/order-confirmation/${result.orderId}`;
                                        });
                                    } else {
                                        throw new Error(result.message || 'Payment verification failed');
                                    }
                                } catch (error) {
                                    console.error('Payment verification error:', error);
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Payment Failed',
                                        text: error.message || 'There was an error processing your payment. Please try again.'
                                    });
                                }
                            },
                            // prefill: {
                            //     name: orderDetails.addressDetails.name,
                            //     email: "", // Add email if available
                            //     contact: orderDetails.addressDetails.phone
                            // },
                            theme: {
                                color: "#F37254"
                            }
                        };

                        const razorpay = new Razorpay(razorpayOptions);
                        // Add payment failure handler
                        razorpay.on('payment.failed', async function (response) {
                            try {
                                // Update order status to Failed
                                const updateResponse = await fetch('/failed-order', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify({
                                        ...orderDetails,
                                    })
                                });

                                if (!updateResponse.ok) {
                                    throw new Error('Failed to update order status');
                                }

                                // Show failure message and redirect
                                await Swal.fire({
                                    title: 'Payment Failed',
                                    text: 'Payment failed, redirecting to orders page',
                                    icon: 'error',
                                    showConfirmButton: false,
                                    timer: 15000,
                                    timerProgressBar: true,
                                    willClose: () => {
                                        window.location.href = '/update-profile';
                                    }
                                });
                            } catch (error) {
                                console.error('Error handling payment failure:', error);
                                Swal.fire('Error', 'Something went wrong. Please try again.', 'error')
                                    .then(() => {
                                        window.location.href = '/update-profile';
                                    });
                            }
                        });
                        razorpay.open();

                    } catch (error) {
                        console.error('Razorpay error:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Payment Failed',
                            text: error.message || 'Failed to initialize payment. Please try again.'
                        });
                    }
                }
                else if (selectedPaymentInput.id === 'wallet') {
                    try {
                        Swal.fire({
                            title: 'Processing',
                            text: 'Placing your order...',
                            allowOutsideClick: false,
                            showConfirmButton: false,
                            willOpen: () => {
                                Swal.showLoading();
                            }
                        });

                        const response = await fetch('/place-order', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(orderDetails)
                        });

                        const data = await response.json();
                        Swal.close();

                        if (response.ok) {
                            await Swal.fire({
                                icon: 'success',
                                title: 'Order Placed Successfully!',
                                text: data.message,
                                showConfirmButton: true
                            });
                            window.location.href = `/order-confirmation/${data.orderId}`;
                        }
                        else {
                            Swal.fire({
                                icon: 'info', // Use 'info' instead of 'error' for a neutral tone
                                title: 'Order Not Completed',
                                text: data.message || 'We encountered an issue while processing your order. Please check your details and try again.',
                                confirmButtonText: 'Got it'
                            });
                        }
                    } catch (error) {

                        await Swal.fire({
                            icon: 'error',
                            title: 'Order Failed',
                            text: data.message || 'Failed to place your order. Please try again.',
                            timer: 15000,
                            timerProgressBar: true,
                        });
                    }
                }

            } catch (error) {
                console.error('Error placing order:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Order Failed',
                    text: error.message || 'An unexpected error occurred while placing your order. Please try again.',
                });
            }
        }


        document.addEventListener('DOMContentLoaded', () => {
            const couponSelect = document.getElementById('couponSelect');
            const applyCouponBtn = document.getElementById('applyCouponBtn');
            const couponMessage = document.getElementById('couponMessage');
            const couponDiscountRow = document.getElementById('couponDiscountRow');
            const couponDiscountAmount = document.getElementById('couponDiscountAmount');
            const subtotalElement = document.getElementById('subtotalAmount');
            const totalAmountElement = document.getElementById('totalAmount');


            // Apply coupon with enhanced validation
            async function applyCoupon() {
                const selectedOption = couponSelect.options[couponSelect.selectedIndex];
                const couponCode = couponSelect.value;
                const subtotal = parseFloat(subtotalElement.textContent.replace('₹', ''));
                const shippingCost = 10.00;

                // Comprehensive input validation
                if (!couponCode) {
                    showCouponMessage('Please select a valid coupon', 'error');
                    return;
                }

                try {
                    const response = await fetch('/apply-coupon', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            couponCode,
                            subtotal
                        })
                    });

                    const result = await response.json();
                    console.log(result)
                    if (result.success) {
                        showCouponMessage('Coupon applied successfully!', 'success');
                        updateCouponDisplay(result.discountAmount);
                    } else {
                        showCouponMessage(result.message || 'Coupon application failed', 'error');
                        resetCouponDisplay();
                    }
                } catch (error) {
                    console.error('Error applying coupon:', error);
                    showCouponMessage('Network error. Please try again.', 'error');
                }
            }

            // Unified message display function
            function showCouponMessage(message, type) {
                couponMessage.textContent = message;
                couponMessage.style.color = type === 'error' ? 'red' : 'green';
            }


            // Update coupon and total amount display
            function updateCouponDisplay(discountAmount) {
                const subtotal = parseFloat(subtotalElement.textContent.replace('₹', ''));
                const shippingCost = 10.00;

                couponDiscountAmount.textContent = `-₹${discountAmount.toFixed(2)}`;
                couponDiscountRow.style.display = 'flex';

                const totalAmount = subtotal + shippingCost - discountAmount;
                totalAmountElement.textContent = `₹${totalAmount.toFixed(2)}`;
            }

            // Reset coupon display
            function resetCouponDisplay() {
                const subtotal = parseFloat(subtotalElement.textContent.replace('₹', ''));
                const shippingCost = 10.00;

                couponDiscountRow.style.display = 'none';
                couponDiscountAmount.textContent = '-₹0.00';
                totalAmountElement.textContent = `₹${(subtotal + shippingCost).toFixed(2)}`;
                couponSelect.selectedIndex = 0;
            }

            // fetchAvailableCoupons();

            applyCouponBtn.addEventListener('click', applyCoupon);

            // Initial fetch of coupons
        });
    </script>

</body>

</html>