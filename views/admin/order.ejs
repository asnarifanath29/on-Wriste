<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Management - Admin Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        .sidebar {
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            width: 250px;
            background: #343a40;
            padding-top: 60px;
            z-index: 1;
        }
        
        .sidebar .nav-link {
            color: rgba(255,255,255,0.85);
            padding: 10px 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .sidebar .nav-link:hover,
        .sidebar .nav-link.active {
            color: #fff;
            background: rgba(255,255,255,0.1);
        }
        
        .navbar {
            position: fixed;
            top: 0;
            right: 0;
            left: 0;
            z-index: 2;
            background: #343a40;
            padding: 0.5rem 1rem;
        }

        .profile-img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: #6c757d;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
        }

        .main-content {
            margin-left: 250px;
            padding: 80px 20px 20px;
        }

        .order-image {
            width: 50px;
            height: 50px;
            object-fit: cover;
        }

        .status-badge {
            font-size: 0.85rem;
            padding: 0.25rem 0.5rem;
        }

        .modal-body {
            max-height: 70vh;
            overflow-y: auto;
        }

        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
                transition: transform 0.3s ease;
            }

            .sidebar.show {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
            }
        }
    </style>
</head>
<body>

<!-- Navbar (reused from your code) -->
<nav class="navbar">
    <div class="container-fluid">
        <button class="navbar-toggler text-white border-white" type="button" id="sidebarToggle">
            <i class="bi bi-list"></i>
        </button>
        <a class="navbar-brand text-white d-flex align-items-center" href="#">
            <i class="bi bi-shop fs-4 me-2"></i>
            E-Shop Admin
        </a>
        <div class="dropdown ms-auto">
            <a href="#" class="d-flex align-items-center text-white text-decoration-none dropdown-toggle" data-bs-toggle="dropdown">
                <div class="profile-img me-2">
                    <i class="bi bi-person-fill"></i>
                </div>
                <div class="d-none d-md-block">
                    <strong>John Doe</strong>
                    <small class="d-block text-light">Admin</small>
                </div>
            </a>
            <ul class="dropdown-menu dropdown-menu-dark dropdown-menu-end">
                <li><a class="dropdown-item" href="#profile"><i class="bi bi-person"></i>Profile</a></li>
                <li><a class="dropdown-item" href="#settings"><i class="bi bi-gear"></i>Settings</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" href="#" id="logout-btn"><i class="bi bi-box-arrow-right"></i>Logout</a></li>
            </ul>
        </div>
    </div>
</nav>

<!-- Sidebar (reused from your code) -->
<div class="sidebar" id="sidebar">
    <ul class="nav flex-column">
        <li class="nav-item">
            <a class="nav-link" href="#dashboard">
                <i class="bi bi-speedometer2"></i>
                Dashboard
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/admin/products">
                <i class="bi bi-box-seam"></i>
                Products
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/admin/userManagement">
                <i class="bi bi-people"></i>
                Users
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/admin/categories">
                <i class="bi bi-grid"></i>
                Categories
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link active" href="/admin/order">
                <i class="bi bi-box-seam-fill"></i>
                Order
            </a>
        </li>
    </ul>
</div>

<div class="main-content">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Order Management</h2>
        <!-- <div class="d-flex gap-2">
            <input type="text" class="form-control" placeholder="Search orders..." id="orderSearch">
            <select class="form-select" id="statusFilter">
                <option value="">All Status</option>
                <option value="Pending">Pending</option>
                <option value="Confirmed">Confirmed</option>
                <option value="Shipped">Shipped</option>
                <option value="Delivered">Delivered</option>
                <option value="Canceled">Canceled</option>
                <option value="Returned">Returned</option>
            </select>
        </div> -->
    </div>

    <div class="table-responsive">
        <table class="table table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Order ID</th>
                    <th>Date</th>
                    <th>Customer</th>
                    <th>Total Amount</th>
                    <th>Payment Status</th>
                    <th>Order Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <% orders.forEach(order => { %>
                <tr>
                    <td><%= order.orderedId %></td>
                    <td><%= new Date(order.createdAt).toLocaleString() %></td>
                    <td><%= order.address.name %></td>
                    <td>$<%= (order.payableAmount).toFixed(2) %></td>
                    <td>
                        <span class="badge bg-<%= order.paymentStatus === 'Paid' ? 'success' : 'warning' %>">
                            <%= order.paymentStatus %>
                        </span>
                    </td>
                    <td>
                        <% let statusColor = '' %>
                        <% switch(order.orderStatus) { 
                            case 'Pending': 
                                statusColor = 'warning'
                                break
                            case 'Confirmed':
                                statusColor = 'info'
                                break
                            case 'Shipped':
                                statusColor = 'primary'
                                break
                            case 'Delivered':
                                statusColor = 'success'
                                break
                            case 'Canceled':
                                statusColor = 'danger'
                                break
                            case 'Returned':
                                statusColor = 'secondary'
                                break
                            default:
                                statusColor = 'warning'
                        } %>
                        <span class="badge bg-<%= statusColor %>">
                            <%= order.orderStatus %>
                        </span>
                    </td>
                    <td>
                        <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#orderModal<%= order._id %>">
                            <i class="bi bi-eye"></i>
                        </button>
                    </td>
                </tr>
                <% }) %>
            </tbody>
        </table>
    </div>
</div>

<!-- Modals for Each Order -->
<% orders.forEach(order => { %>
<div class="modal fade" id="orderModal<%= order._id %>" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Order Details - <%= order.orderedId %></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <h6 class="fw-bold">Customer Information</h6>
                        <p>Name: <%= order.address.name %><br>
                        Phone: <%= order.address.phone %></p>
                    </div>
                    <div class="col-md-6">
                        <h6 class="fw-bold">Shipping Address</h6>
                        <p><%= order.address.address %><br>
                        <%= order.address.place %>, <%= order.address.state %><br>
                        Pincode: <%= order.address.pincode %></p>
                    </div>
                </div>

                <hr>

                <div class="mb-3">
                    <h6 class="fw-bold">Order Status</h6>
                    <select class="form-select order-status-update" data-order-id="<%= order._id %>">
                        <option value="Pending" <%= order.orderStatus === 'Pending' ? 'selected' : '' %>>Pending</option>
                        <option value="Confirmed" <%= order.orderStatus === 'Confirmed' ? 'selected' : '' %>>Confirmed</option>
                        <option value="Shipped" <%= order.orderStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                        <option value="Delivered" <%= order.orderStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                        <option value="Canceled" <%= order.orderStatus === 'Canceled' ? 'selected' : '' %>>Canceled</option>
                        <option value="Returned" <%= order.orderStatus === 'Returned' ? 'selected' : '' %>>Returned</option>
                    </select>
                </div>

                <h6 class="fw-bold">Order Items</h6>
                <div class="table-responsive">
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Image</th>
                                <th>Product</th>
                                <th>Quantity</th>
                                <th>Price</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (order.items && Array.isArray(order.items)) { %>
                                <% order.items.forEach(item => { %>
                                    <tr>
                                        <td><img src="<%= item.image %>" alt="<%= item.productId?.name || 'Product' %>" class="img-thumbnail" style="width: 50px; height: 50px;"></td>
                                        <td><%= item.productId?.name || 'Product Name Not Available' %></td>
                                        <td><%= item.quantity %></td>
                                        <td>$<%= (item.price).toFixed(2) %></td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="4">No products found</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <% if (['Delivered', 'Canceled', 'Returned'].includes(order.orderStatus)) { %>
                    <button type="button" class="btn btn-primary update-order-status" data-order-id="<%= order._id %>" disabled>Update Status</button>
                  <% } else { %>
                    <button type="button" class="btn btn-primary update-order-status" data-order-id="<%= order._id %>">Update Status</button>
                  <% } %>
                  


                
              

            </div>
        </div>
    </div>
</div>
<% }) %>



<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    // Sidebar Toggle
    document.getElementById('sidebarToggle').addEventListener('click', function() {
        document.getElementById('sidebar').classList.toggle('show');
    });

    // Update Order Status
    // document.getElementById('updateStatusBtn').addEventListener('click', function() {
    //     const newStatus = document.getElementById('orderStatusUpdate').value;
    //     Swal.fire({
    //         title: 'Confirm Status Update',
    //         text: `Are you sure you want to update the order status to ${newStatus}?`,
    //         icon: 'warning',
    //         showCancelButton: true,
    //         confirmButtonColor: '#3085d6',
    //         cancelButtonColor: '#d33',
    //         confirmButtonText: 'Yes, update it!'
    //     }).then((result) => {
    //         if (result.isConfirmed) {
                // Here you would typically make an API call to update the status
                // For demo purposes, we'll just show a success message
    //             Swal.fire(
    //                 'Updated!',
    //                 'The order status has been updated.',
    //                 'success'
    //             );
    //         }
    //     });
    // });

    // Search functionality
    // document.getElementById('orderSearch').addEventListener('input', function(e) {
    //     const searchTerm = e.target.value.toLowerCase();
    //     // Implement search logic here
    // });

    // // Status filter
    // document.getElementById('statusFilter').addEventListener('change', function(e) {
    //     const selectedStatus = e.target.value;
    //     // Implement filter logic here
    // });

    // Logout functionality
    document.getElementById('logout-btn').addEventListener('click', () => {
        Swal.fire({
            title: 'Are you sure?',
            text: 'You will be logged out!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, logout!'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('/admin/logout', {
                    method: 'POST',
                }).then(response => {
                    if (response.ok) {
                        window.location.href = '/admin/login';
                    } else {
                        console.error('Logout failed');
                    }
                });
            }
        });
    });
</script>











<script>
// Update your event listener code to use the correct URL
document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('.update-order-status').forEach(button => {
        button.addEventListener('click', async function () {
            const orderId = this.dataset.orderId;
            const statusSelect = document.querySelector(`.order-status-update[data-order-id="${orderId}"]`);
            const newStatus = statusSelect ? statusSelect.value : null;

            if (!newStatus) {
                alert('Please select a valid status!');
                return;
            }

            try {
                // Update this URL to match your route
                const response = await fetch('/admin/update', {  
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ orderId, newStatus })
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const result = await response.json();

                if (result.success) {
                    // Refresh the page to show updated status
                    window.location.reload();
                } else {
                    Swal.fire('Error', 'Failed to update status', 'error');
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire('Error', 'An error occurred while updating status', 'error');
            }
        });
    });
});

</script>

</body>
</html>